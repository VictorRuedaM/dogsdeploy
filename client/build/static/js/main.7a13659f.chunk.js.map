{"version":3,"sources":["components/HomePage/Home.module.css","components/DetailsPage/Detail.module.css","components/LandingPage/LandingPage.module.css","components/Card/Card.module.css","components/Paged/Paged.module.css","components/SearchBar/Search.module.css","components/CreateDog/CreateDog.module.css","components/LandingPage/LandingPage.jsx","components/Card/Card.jsx","components/Paged/Paged.jsx","actions/actionsExports.js","actions/index.actions.js","components/SearchBar/SearchBar.jsx","components/HomePage/HomePage.jsx","components/CreateDog/CreateDog.jsx","components/DetailsPage/DetailsPage.jsx","App.js","reportWebVitals.js","reducer/index.reducer.js","store/index.js","index.js"],"names":["module","exports","LandingPage","className","s","back","title","to","button","Card","props","image","name","temperament","weight","id","container","card","src","alt","Paginated","dogsPerPage","allDogs","paginated","currentPage","numberOfPage","i","Math","ceil","push","pagination","map","n","active","href","onClick","GET_ALL_DOGS","GET_ONE_DOG","GET_ALL_TEMPERAMENTS","FILTER_BY_WEIGHT","FILTER_BY_ORIGIN","FILTER_BY_NAME","FILTER_BY_TEMPERAMENT","CREATE_DOG_DB","GET_DOG_DETAIL","CLEAR_DETAILS","getAllDogs","dispatch","axios","get","then","res","type","payload","data","catch","error","console","log","getDogsTemperaments","SearchBarDog","useDispatch","useSelector","state","dogs","useState","setName","handleSubmit","e","value","preventDefault","a","dog","alert","search","placeholder","onChange","target","handleInput","buttonSearch","Home","allTemperaments","dogsTemperaments","SetOrder","SetCurrentPage","indexOfLastDog","indexOfFirstDog","currentDogs","slice","handleFilterByWeight","handleByOrigin","handleByName","handleFilterByTemperaments","useEffect","buttonCreate","buttonReload","buttonClick","selectOptions","defaultValue","length","pageNum","Array","isArray","temperaments","arr","forEach","toString","link","preloader","CreateDog","navigate","useNavigate","errors","setErrors","dogErr","setDogErr","height","life_span","formDog","SetFormDog","hmin","hmax","wmin","wmax","lmin","lmax","inputs","SetInputs","handleInputs","errorsInputs","validateInputs","handleFormDog","parseInt","validateFormDog","Object","keys","info","post","buttonGoBack","onSubmit","labels","warnings","min","includes","buttonCancel","box","listItems","t","item","buttonRemoveTem","filter","removeTem","DetailsPage","useParams","response","getDogDetail","dogDetail","handleClearDog","detailCard","detailImage","width","App","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","allDogsTemperaments","rootReducer","action","originFilter","createdInDb","filterName","sort","b","fileterTemperament","store","createStore","composeWithDevTools","applyMiddleware","thunk","dotenv","config","defaults","baseURL","process","REACT_APP_API","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a13659f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Home_link__sHyAK\",\"buttonCreate\":\"Home_buttonCreate__28EPO\",\"buttonReload\":\"Home_buttonReload__2-0d-\",\"card\":\"Home_card__1lXL7\",\"title\":\"Home_title__2j5Hy\",\"selectOptions\":\"Home_selectOptions__cTCHe\",\"alert\":\"Home_alert__1Xys_\",\"preloader\":\"Home_preloader__YkjIc\",\"girar\":\"Home_girar__32F7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__TvZ0u\",\"detailCard\":\"Detail_detailCard__3vgKm\",\"detailImage\":\"Detail_detailImage__gDVoo\",\"buttonGoBack\":\"Detail_buttonGoBack__23OIV\",\"preloader\":\"Detail_preloader__36fBn\",\"girar\":\"Detail_girar__1yWRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"LandingPage_button__1vqrR\",\"title\":\"LandingPage_title__vhYRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3BCzV\",\"card\":\"Card_card__1eE8R\",\"image\":\"Card_image__3KnJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paged_pagination__3Upod\",\"active\":\"Paged_active__qsZxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3h56d\",\"buttonSearch\":\"Search_buttonSearch__34sVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonCreate\":\"CreateDog_buttonCreate__2tzw1\",\"buttonGoBack\":\"CreateDog_buttonGoBack__15a0G\",\"buttonCancel\":\"CreateDog_buttonCancel__Kxm3P\",\"buttonRemoveTem\":\"CreateDog_buttonRemoveTem__1BmJ0\",\"container\":\"CreateDog_container__34vw6\",\"inputs\":\"CreateDog_inputs__1p4eH\",\"labels\":\"CreateDog_labels__3qF3q\",\"warnings\":\"CreateDog_warnings__yfgUc\",\"listItems\":\"CreateDog_listItems__3x6Er\",\"item\":\"CreateDog_item__1OrVN\",\"title\":\"CreateDog_title__3nIYq\",\"box\":\"CreateDog_box__2p9UG\",\"selectOptions\":\"CreateDog_selectOptions__1T-GV\"};","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport s from './LandingPage.module.css';\n\n\n// Funcion LandingPage que renderiza la landing con la imagen de fondo y el boton para ingresar a la home.\nexport default function LandingPage(){\n\n    return(\n\n        <div className={s.back}>\n            <h1 className={s.title}>Welcome To My Best Friend</h1>\n            <Link to={'/home'}>\n                <button className={s.button}>Start</button>\n            </Link>\n        </div>\n    )\n}","import React from \"react\";\nimport s from './Card.module.css';\n\nexport default function Card(props){\n\n    const {image, name, temperament, weight, id} = props;\n\n    \n    // compornente Card encargado del renderizado de cada raza en el home.\n    // recibe los parametros por props desde en home.\n    return(\n\n        \n        <div className={s.container} key={id}>\n            <div className={s.card}>\n                <img className={s.image} src={image} alt=\"Dog\"  />\n                <h2>{name}</h2>\n                <h4>Weight: {weight} Kg.</h4>\n                <h4>Temperaments: {temperament}</h4>\n               \n            </div>\n        </div>\n    );\n\n}","import React from \"react\";\nimport s from './Paged.module.css';\n\n\n\n// Funcion Paginated que crea y renderiza el paginado \nexport default function Paginated({dogsPerPage, allDogs, paginated, currentPage}){\n\n    const numberOfPage = [];\n    // Se recorre un for por el resultado de el total de dogs dividido por el numero por paginas, eso dara el numero de paginas a rendeirizar.\n    for(let i = 1; i <= Math.ceil(allDogs / dogsPerPage); i++){\n        // Se guarda cada numero de pagina en el array\n        numberOfPage.push(i);\n    };\n\n    return (\n\n        <nav>\n            <ul className={s.pagination}>\n                {\n                    // Se renderiza el paginado recorriendo el array.\n                    numberOfPage && numberOfPage.map(n => (\n                            <li key={n}  >\n                                \n                                <a className={\n                // Si la pagina en currentPage es igual a el numero de pagina se le da la clase active para indicar al usuario en que pagina esta.\n                  currentPage === n ? s.active : s.pagination\n                } href=\"#\" onClick={() => paginated(n)} >{n}</a>\n                            </li>\n                    ))\n                    \n                }\n            </ul>\n        </nav>\n    )\n}","export const GET_ALL_DOGS = 'GET_ALL_DOGS';\nexport const GET_ONE_DOG = 'GET_ONE_DOG';\nexport const GET_ALL_TEMPERAMENTS = 'GET_ALL_TEMPERAMENTS';\nexport const FILTER_BY_WEIGHT = 'FILTER_BY_WEIGHT';\nexport const FILTER_BY_ORIGIN = 'FILTER_BY_ORIGIN';\nexport const FILTER_BY_NAME = 'FILTER_BY_NAME';\nexport const FILTER_BY_TEMPERAMENT = 'FILTER_BY_TEMPERAMENT';\nexport const CREATE_DOG_DB = 'CREATE_DOG_DB';\nexport const GET_DOG_DETAIL = 'GET_DOG_DETAIL';\nexport const DOG_NOT_FOUND = 'DOG_NOT_FOUND';\nexport const CLEAR_DETAILS = 'CLEAR_DETAILS';","import axios from 'axios';\nimport {GET_ALL_DOGS,\n        GET_ALL_TEMPERAMENTS, \n        FILTER_BY_WEIGHT, \n        FILTER_BY_ORIGIN,\n        FILTER_BY_NAME,\n        FILTER_BY_TEMPERAMENT,\n        GET_ONE_DOG,\n        GET_DOG_DETAIL,\n        CLEAR_DETAILS\n    } from './actionsExports';\n\n\n// Trae todos los dogs de la ruta principal \nexport function getAllDogs(){\n\n    return  (dispatch) => {\n\n        axios.get('/dogs')\n        .then(res => {\n            return dispatch({\n                type: GET_ALL_DOGS,\n                payload: res.data\n            })\n        }).catch(error => {\n            console.log(`<<<Error in [getAllDogs]>>> ${error}`);\n        })\n        \n    }\n  \n};\n\n// Trae un dog pasado su nombre por parametro.\nexport function getOneDog(value){\n\n    return async (dispatch) => {\n\n        \n        try {\n            \n            let dog = await axios(`/dogs?name=${value}`);\n            console.log('RRRRRUUUUU',dog)\n            return dispatch({\n                    type: GET_ONE_DOG,\n                    payload: dog.data\n            })\n        } catch (error) {\n            console.log(`<<<Error in [getOneDog]>>> ${error}`);\n            alert('Dog not found!!!')\n        }\n        \n        \n    }\n}\n\n\n\n// Trae los temperamentos de la ruta y los guarda en la base de datos para luego retornarlos a la action.\nexport function getDogsTemperaments(){\n\n    return (dispatch) => {\n\n        axios.get('/temperament')\n        // console.log('fSDFSDFSDFSDFSD',temperaments)  \n        .then((res) => {\n            return dispatch({\n                type: GET_ALL_TEMPERAMENTS,\n                payload: res.data\n            })\n        }).catch((error) => {\n            console.log(`<<<Error in [getDogsTemperaments]>>> ${error}`);\n        });\n        \n    }   \n};\n\n\n// Filtra con el metodo sort por peso desde el back y devuelve asc o desc segun sea el valor pasado.\nexport function filterDogWeight(value){\n\n    return (dispatch) => {\n\n        axios.get(`/weight/${value}`)\n        .then(res => {\n            return dispatch({\n                type: FILTER_BY_WEIGHT,\n                payload: res.data\n            })\n        }).catch(error => {\n            console.log(`<<<Error in [filterDogWeight]>>> ${error}`);\n        })\n        \n    }\n\n};\n\n\n// Envia el temperamento al reducer para ser filtrado entre las razas.\nexport function filterDogTemperaments(value){\n\n    return{\n        type: FILTER_BY_TEMPERAMENT,\n        payload: value\n    }\n}\n\n\n\n\n// Envia el parametro asc o desc al reducer para organizar los nombre con el metodo sort.\nexport function filterDogName(value){\n    \n    return {\n        type: FILTER_BY_NAME,\n        payload: value\n    }\n\n};\n\n// Filtrar por razas de la api y las creadas en la DB local desde el reducer.\nexport function filterDogOrigin(value){\n\n    return{\n        type: FILTER_BY_ORIGIN,\n        payload: value\n    }\n\n}\n\n\n// Envia a la ruta post la data para crear el dog.\nexport function createDogDB(info){\n    return  (dispatch) => {\n        axios.post('/dog', info)\n        .then(res => {\n            return res.data\n        }).catch((error) => {\n            console.log(`<<<Error in [createDogDB]>>> ${error}`);\n        });\n    }\n}\n\n\n// Envia el Id al back para filtrarlo y debuelve la raza seleccionada en la Card.\nexport function getDogDetail(id){\n\n    return async (dispatch) => {\n\n        try {\n            const response = await axios.get(`/dogs/${id}`);\n\n            console.log(response);\n\n            return dispatch({\n                type: GET_DOG_DETAIL,\n                payload: response.data\n            })\n\n        } catch (error) {\n            console.log(`<<<Error in [getDogDetail]>>> ${error}`);\n        }\n    }\n}\n\n// Action que limpia el estado de details en el reducer para que al renderizar un dog no se vea al principio el anteriro.\nexport function clearDetails(){\n    return{\n        type: CLEAR_DETAILS\n    }\n}","import React from \"react\";\nimport {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getOneDog} from '../../actions/index.actions';\nimport s from './Search.module.css'\n\n\n\nexport default function SearchBarDog(){\n\n    const dispatch = useDispatch();\n\n    const notFound = useSelector((state) => state.dogs);\n\n    const [name, setName] = useState('');\n\n\n    // funcion que toma los cambios del input y los guarda en el estado local \n    function handleInput(e){\n\n        e.preventDefault();\n        if(e.target.value && typeof e.target.value  === 'string'){\n            setName(e.target.value);\n        }\n        console.log('NAME',name)\n    };\n\n    // SearchBar bucar por nombre de raza pasada por query\n    function handleSubmit(e){\n        e.preventDefault();\n        \n        dispatch(getOneDog(name));\n        setName('')\n    };\n\n    \n    return (\n\n        <div>\n            \n            <input className={s.search} type=\"text\"  placeholder=\"Search Breed...\" value={name} onChange={(e) => handleInput(e)}/>\n            \n            <button className={s.buttonSearch} type=\"submit\" onClick={(e) => handleSubmit(e)}>Search</button>\n        </div>\n    )\n}","import React from \"react\";\nimport {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {Link} from 'react-router-dom';\nimport Card  from \"../Card/Card\";\nimport Paginated from '../Paged/Paged';\nimport SearchBarDog from \"../SearchBar/SearchBar\";\nimport s from './Home.module.css';\n\nimport {getAllDogs,\n        getDogsTemperaments,\n        filterDogWeight,\n        filterDogOrigin,\n        filterDogName,\n        filterDogTemperaments,\n       \n        } from '../../actions/index.actions';\n\nexport default function Home(){\n\n    const dispatch = useDispatch();\n\n    // se traen los datos de los estados globales.\n    const allDogs = useSelector((state) => state.dogs);\n    const allTemperaments = useSelector((state) => state.dogsTemperaments);\n\n    // Estado de ordenamiento por nombre\n    const [order, SetOrder] = useState('');\n\n\n    const [alert,setAlert] = useState({a: ''});\n\n    \n\n    // Paginado de la aplicación.\n\n    // estado currentPage setea la pagina actual\n    const [currentPage, SetCurrentPage] = useState(1);\n    // estado dogsPerPage setea el numero de dogs por pagina.\n    const [dogsPerPage, setDogsPerPage] = useState(8);\n    // indexOfLastDog guarda el index del ultimo dog de la operacion currentPage * dogsPerPage.\n    const indexOfLastDog = currentPage * dogsPerPage;\n    // indexOfFirstDog guarda el index del primer dog de la operacion indexOfLastDog - dogsPerPage.\n    const indexOfFirstDog = indexOfLastDog - dogsPerPage;\n    // currentDogs guarda los index de los dogs que se van a renderizar en cada pagina de apliacer un slice a allDogs con el numero de inicio y de final.\n    const currentDogs = allDogs.slice(indexOfFirstDog, indexOfLastDog);\n\n    // Funcion Paginated que setea el estado local currentPage con la pagina actual.\n    const paginated = (pageNum) => {\n        SetCurrentPage(pageNum);\n    }\n\n    // console.log('AAAAAA',allDogs)\n    // se cargan por primera vez los datos con el metodo useEffect llamando a la action getAllDogs, getDogsTemperaments\n    useEffect(() => {\n        \n        dispatch(getAllDogs());\n        dispatch(getDogsTemperaments());\n        \n    },[]);\n\n\n    // recargar los datos de la pagina \n    function buttonClick(e){\n\n        e.preventDefault();\n        dispatch(getAllDogs());\n    };\n\n\n    // funcion select Weight envia al action filterDogWeight el valor del select para filtrarlo\n    function handleFilterByWeight(e){\n        e.preventDefault();\n        dispatch(filterDogWeight(e.target.value));\n        SetCurrentPage(1);\n    };\n\n    // ordenar por origen (api o DB) envia al action filterDogOrigin el valor del select para filtrarlo\n    function handleByOrigin(e){\n\n        dispatch(filterDogOrigin(e.target.value))\n        SetCurrentPage(1);\n    };\n\n    // ordenar por nombre (asc o desc) envia al action filterDogName el valor del select para filtrarlo\n    function handleByName(e){\n        \n        e.preventDefault();\n        dispatch(filterDogName(e.target.value));\n        SetCurrentPage(1);\n        SetOrder(`Order ${e.target.value}`)\n    };\n\n    // filtrar por temperamento envia al action filterDogTemperaments el valor del select para filtrarlo\n    function handleFilterByTemperaments(e){\n        \n        e.preventDefault();\n        dispatch(filterDogTemperaments(e.target.value));\n        SetCurrentPage(1);\n\n    };\n   \n\n\n    \n    \n    // Se renderiza en component Home\n    return(\n\n        <div>\n            <h1 className={s.title}>My Best Friend</h1>\n\n            <Link  to={'/createDog'}>\n                <button className={s.buttonCreate}>Create Breed</button>\n            </Link>\n\n            \n\n            <button className={s.buttonReload} onClick={e => buttonClick(e)}>Reload Breeds</button>\n\n            <div>\n\n                <SearchBarDog/>\n\n                {/* Filtrado por por raza creada o de la api */}\n                <select className={s.selectOptions} onChange={e => handleByOrigin(e)}>\n                    \n                    <option value={'all'}>All Breeds</option>\n                    <option value={'api'}>Breeds Api</option>\n                    <option value={'breedDB'}>Breeds Created</option>\n\n                </select>\n            </div>\n\n            <div>\n                {/* Filtrado alfabetico */}\n                <select className={s.selectOptions} onChange={(e) => handleByName(e)}>\n                    <option defaultValue={'all'}>Name</option>\n                    <option value={'asc'}>Ascendingly</option>\n                    <option value={'desc'}>Descendingly</option>\n                </select>\n            </div>\n\n            <div>\n                {/* Filtrado por peso */}\n                <select className={s.selectOptions} onChange={e => handleFilterByWeight(e)}>\n                    <option value={'all'}>Weight</option>\n                    <option value={'asc'}>High Weight</option>\n                    <option value={'desc'}>low Weight</option>\n                </select>\n                \n            </div>\n\n            <div>\n                {/* Filtrado por temperamentos */}\n                <select className={s.selectOptions} onChange={e => handleFilterByTemperaments(e)}>\n                    <option value={'select'}>Select Temperament</option>\n                    {\n                        allTemperaments && allTemperaments.map((e) => \n                            <option value={e.name} key={e.id}>{e.name}</option>\n\n                        )\n                        \n                    }\n                    \n                </select>\n                \n            </div>\n            <br />\n\n            {/* Paginado */}\n            <Paginated\n                dogsPerPage={dogsPerPage}\n                allDogs={allDogs.length}\n                paginated={paginated}\n                currentPage={currentPage}\n            />\n            <br />\n            \n            {/* Card */}\n\n            \n            \n            <div className={s.card} >\n                {\n                    // Mapear el resultado que llega de state\n                    \n                    \n                   currentDogs.length > 0? \n                    currentDogs && currentDogs.map(e => {\n                        \n                        // Los temperamentos de los dogs creados hay que pasarlos de array de objetos a string\n                        // para que se puedan visualizar en la pagina\n                        if(Array.isArray(e.temperaments)){\n                            \n                            let arr = [];\n\n                            e.temperaments.forEach(e => {\n                                arr.push(' '+e.name);\n                            });\n\n                            e.temperament = arr.toString()\n                            \n                        }\n\n                        \n                        return(\n                            // Se le pasa la data a el componente Card \n\n                            <div >\n                                {/* Se envia el Id de la raza para details */}\n                                <Link className={s.link }to={`/home/${e.id}`} >\n                               \n                                    <Card \n                                        image={e.image} \n                                        name={e.name}\n                                        weight={e.weight}\n                                        temperament={e.temperament}\n                                        id={e.id}\n                                    />\n                                </Link>\n                            </div>\n                        )\n                    })\n\n                    :\n                    // Loader \n                    \n                    <div className={s.preloader}></div> \n\n                    \n    \n                }\n\n                {/* Prueba de la correcion del PI */}\n                {/* <div>\n                    {\n                        //  allDogs.length < 1 ? <p className={s.alert}>Dog not found!!</p> : null\n\n                        currentDogs.length < 1 ? <p className={s.alert}>Dog not found</p> : null\n                    }\n                </div>\n            */}\n\n            </div>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport {useState, useEffect} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\nimport {createDogDB, getDogsTemperaments} from '../../actions/index.actions';\nimport {useSelector, useDispatch} from 'react-redux';\nimport s from './CreateDog.module.css';\n\n\n// Funcion para validar lo ingresado a los inputs del form que guarda en el estado errors como un objete si no cumple lo requirido, el error del cada input\n// para luego ser renderizado, adicinalmente si en el estado error hay elementos no permitira el envio del form.\nfunction validateInputs(inputs){\n    let errorsInputs = {};\n\n    if(inputs.hmin < 0 || inputs.hmin > 50){\n        errorsInputs.hmin = '** Require field, please write a valid number between 1 and 50 **'\n    }\n    if(inputs.hmax < 0 || inputs.hmax > 100){\n        errorsInputs.hmax = '** Require field, please write a valid number between 1 and 100 **'\n    }\n    if(inputs.hmax < inputs.hmin){\n        errorsInputs.hmin = '** The minimum value cannot be greater than the maximum value. **'\n    }\n    \n    \n\n    if(inputs.wmin < 0 || inputs.wmin > 60){\n        errorsInputs.wmin = '** Require field, please write a valid number between 1 and 60 **'\n    }\n    if(inputs.wmax < 0 || inputs.wmax > 100){\n        errorsInputs.wmax = '** Require field, please write a valid number between 1 and 100 **'\n        \n    }\n\n    if(inputs.wmax < inputs.wmin){\n        errorsInputs.wmin = '** The minimum value cannot be greater than the maximum value. **'\n    }\n    \n\n    if(inputs.lmin < 0 || inputs.lmin > 8){\n        errorsInputs.lmin = '** Require field, please write a valid number between 1 and 8 **'\n    }\n    if(inputs.lmax < 0 || inputs.lmax > 25){\n        errorsInputs.lmax = '** Require field, please write a valid number between 1 and 25 **'\n    }\n    if(inputs.lmax < 10 && inputs.lmax < inputs.lmin){\n        errorsInputs.lmin = '** The minimum value cannot be greater than the maximum value. **'\n    }\n\n\n    return errorsInputs;\n}\n\n\n// Funcion validateFormDog cumple la misma funcion de validateInputs solo que en le resto del form, esto es el input name.\nfunction validateFormDog(formDog){\n\n    let errors = {}; \n\n    if(!formDog.name) {\n        errors.name = '** Name is required **'\n      } else if (parseInt(formDog.name)) {\n        errors.name = '** Name is invalid, please write a text **'\n      }\n\n    \n\n    return errors;\n}\n\n\n\n// Funcion CreateDog renderiza el form.\nexport function CreateDog(){\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    // Se ejecuta en el useEffect la action getDogsTemperaments para obtener los temperamentos.\n    useEffect(() => {\n        dispatch(getDogsTemperaments());\n    }, []);\n\n    // Se traen los temperamentos del state.dogsTemperaments\n    const allTemperaments = useSelector((state) => state.dogsTemperaments);\n\n    // State local errors de los inputs\n    const [errors, setErrors] = useState({});\n    // State local dogErr del resto del form\n    const [dogErr, setDogErr] = useState({});\n    // const [errorForm, setErrorForm] = useState('')\n\n\n    // Estado local para todos los imputs del form que luego sera enviado a la ruta post.\n    const [formDog, SetFormDog] = useState({\n\n        name: '',\n        height: '',\n        weight: '',\n        life_span: '',\n        image: '',\n        temperament: []\n    });\n\n    // Estado local de los inputs weght, height y life_span que recoje la data de estos campos y los envia al state formDog.\n    const [inputs, SetInputs] = useState({\n        hmin: 0,\n        hmax: 0,\n        wmin: 0,\n        wmax: 0,\n        lmin: 0,\n        lmax: 0,\n    })\n\n    // Funcion handleInputs que guarda el valor de los inputs weght, height y life_span en el estado local inpusts.\n    function handleInputs(e){\n        \n        SetInputs({\n            ...inputs,\n            [e.target.name]: e.target.value\n        });\n\n        // Se setea el estado errors con lo que devuelve la funcion validtateInputs pasadole el valor de cada input.\n        setErrors(validateInputs({\n            ...inputs,\n            [e.target.name]: e.target.value\n        }))\n        \n        // console.log(inputs)\n        \n    }\n\n\n    // Funcion handleFormDog que guarda el valor del input name en el estado local formDog.\n    function handleFormDog(e){\n\n        \n        SetFormDog({\n            ...formDog,\n            [e.target.name]: e.target.value\n            \n        });\n        \n        // Se setea el estado dogErr con lo que devuelve la funcion validtateFormDog pasadole el valor delinput name.\n        setDogErr(validateFormDog({\n            ...formDog,\n            [e.target.name]: e.target.value\n        }))\n          \n        \n        \n        \n    }\n\n\n    // Funcion handleSelect que guarda el valor del select de temperamento en el estado local formDog.\n    function handleSelect(e){\n\n        // Adicinalmente se gurada en el estado local formDog lo que esta guardado en el estado local inputs\n        // el height, weight, life_span como cadena de texto. uniendo los valores min y max.\n\n        // Condicional que evalua se el temperamento ya fue seleccionado en el select  y esta en el estado para no dejarlo repetir.\n        if(formDog.temperament.includes(e.target.value)) return 0;\n\n        SetFormDog({\n            ...formDog,\n\n            temperament: [...formDog.temperament, e.target.value],\n            'height':`${inputs.hmin} - ${inputs.hmax}`,\n            'weight':`${inputs.wmin} - ${inputs.wmax}`,\n            'life_span':`${inputs.lmin} - ${inputs.lmax} years`,\n        });\n       \n    }\n\n\n    // Funcion removeTem elemina un temperamento del array de tempeamentos del formDog cuando el usuario pulsa en boton en el front.\n    function removeTem(t){\n       \n        SetFormDog({\n            ...formDog,\n            temperament: [...formDog.temperament.filter(e => e !== t)]\n        });\n        \n\n    }\n\n\n    // Funcion hadleSubmit que envia el estado formDog a la ruta post\n    function handleSubmit(e){\n\n        e.preventDefault();\n        \n        // Se comprueva si hay errores en los dos estados de error y de ser asi se lanza un alert con la \n        // advertencia para que el usuario verifiquie la informacion de los inputs y no se deja enviar el form.\n        if(Object.keys(dogErr).length || Object.keys(errors).length || formDog.name === ''){\n\n            alert('¡¡¡Verify that the fields are not empty or with incorrect parameters to create the race!!!')\n            \n        }else{\n            // Si todo esta bien se envia lo que esta en el estado formDog a la action createDogDB\n            // y se lanza un alert para informar que se creo la raza con exito.\n            let a = dispatch(createDogDB(formDog)); \n            alert('Breed created successfully!!!')\n            // console.log(a)\n\n            // Se resetean los estados locales \n            SetInputs({\n                hmin: 0,\n                hmax: 0,\n                wmin: 0,\n                wmax: 0,\n                lmin: 0,\n                lmax: 0,\n            });\n            SetFormDog({\n                name: '',\n                height: '',\n                weight: '',\n                life_span: '',\n                image: '',\n                temperament: []\n            });\n            \n            // Se redirecciona a home\n            navigate('/home')\n        }\n        \n\n        // console.log(Object.keys(dogErr).length, Object.keys(errors).length)\n        \n       \n    }\n\n    return(\n\n        // Se renderiza en form.\n        <div >\n            <Link to={'/home'}><button className={s.buttonGoBack}>Go back to Home</button></Link>\n\n            <h1 className={s.title}>Create Dog Breed</h1>\n\n                <div className={s.container}>\n                    <form onSubmit={(e) => handleSubmit(e)}>\n\n                        <div>\n                            <label className={s.labels}>Name: </label>\n                            <input type=\"text\" name=\"name\"  value={formDog.name} onChange={handleFormDog} className={s.inputs}/>\n                            {dogErr.name && (<p className={s.warnings}>{dogErr.name}</p>)}\n                        </div>\n\n                        <div>\n                            <label className={s.labels}>Min height: </label>\n                            <input type=\"number\" name=\"hmin\"  value={inputs.hmin} onChange={handleInputs} className={s.inputs}/>\n                            {errors.hmin && (<p className={s.warnings}>{errors.hmin}</p>)}\n                        </div>\n\n                        <div>\n                            <label className={s.labels}>Max height: </label>\n                            <input type=\"number\" name=\"hmax\" min={inputs.hmin} value={inputs.hmax} onChange={handleInputs} className={s.inputs}/>\n                            {errors.hmax && (<p className={s.warnings}>{errors.hmax}</p>)}\n                        </div>\n\n                        <div>\n                            <label className={s.labels}>Min weight: </label>\n                            <input type=\"number\" name=\"wmin\"  value={inputs.wmin} onChange={handleInputs} className={s.inputs}/>\n                            {errors.wmin && (<p className={s.warnings}>{errors.wmin}</p>)}\n                        </div>\n\n                        <div>\n                            <label className={s.labels}>Max weight: </label>\n                            <input type=\"number\" name=\"wmax\" min={inputs.wmin} value={inputs.wmax} onChange={handleInputs} className={s.inputs}/>\n                            {errors.wmax && (<p className={s.warnings}>{errors.wmax}</p>)}\n                        </div>\n\n                        <div>\n                            <label className={s.labels}>Min life years: </label>\n                            <input type=\"number\" name=\"lmin\" value={inputs.lmin} onChange={handleInputs} className={s.inputs}/>\n                            {errors.lmin && (<p className={s.warnings}>{errors.lmin}</p>)}\n                        </div>\n\n                        <div>\n                            <label className={s.labels}>Max life years: </label>\n                            <input type=\"number\" name=\"lmax\" min={inputs.lmin} value={inputs.lmax} onChange={handleInputs} className={s.inputs}/>\n                            {errors.lmax && (<p className={s.warnings}>{errors.lmax}</p>)}\n                        </div>\n\n                        <div>\n                            <label className={s.labels}>Image: </label>\n                            <input type=\"text\" name=\"image\" value={formDog.image} onChange={handleFormDog} className={s.inputs}/>\n                        </div>\n\n                        <div className={s.selectOptions}>\n                            <select className={s.selectOptions} onChange={handleSelect}>\n                                <option value={'select'}>Select Temperament</option>\n                                {\n                                    allTemperaments && allTemperaments.map(e => \n                                        \n                                        <option value={e.name} key={e.id}>{e.name}</option>\n                                        )\n                                }\n                            </select>\n                        </div>\n                        \n\n                       <div>\n                            <button type=\"submit\" className={s.buttonCreate} >Create Dog</button>\n                            \n                            <Link to={'/home'}><button className={s.buttonCancel}>Cancel</button></Link>\n                       </div>\n\n                       \n                        {/* <p className={s.warnings}>{errorForm}</p> */}\n                    </form>\n                    \n                    \n                </div>\n                <div className={s.box}>\n                            <ul className={s.listItems}>\n                                {\n                                    formDog.temperament.map(t => \n                                        \n                                        <li className={s.item} key={t}>{t} \n                                        <button className={s.buttonRemoveTem} onClick={() => removeTem(t)}>X</button>\n                                        </li>\n                                    )\n                                }\n\n                            </ul>\n                </div>            \n            <div>\n                \n                    \n                    \n            </div>\n\n\n\n        </div>\n    )\n\n}\n\n","import React from \"react\";\nimport {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Link, useParams} from 'react-router-dom';\nimport {getDogDetail, clearDetails} from '../../actions/index.actions';\nimport s from './Detail.module.css';\n\n\n// Funcion DetailsPage que renderiza los detalles de cada raza cuando si da click en cada Card en el home\n// recibe mediante url el Id de la raza selecionada. \nexport function DetailsPage(){\n\n    const {id} = useParams();\n    \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // Se envia el Id a la action getDogDetail para obtener la data de la raza\n        dispatch(getDogDetail(id));\n    },[dispatch]);\n\n    const dog = useSelector((state) => state.dogDetail);\n\n    // Funcion que llama el action que limpia el estado en el reducer para que no se vea el dog anterior al ver uno nuevo.\n    function handleClearDog(){\n        dispatch(clearDetails());\n    }\n    \n    // console.log('>>>>>>>>>>>>>>>>>>>>>',dog[0].temperaments[1])\n    // Se renderiza la card de details.\n    return(\n\n        <div className={s.container}>\n            <div className={s.detailCard}>\n                {\n                    \n\n                    dog.length > 0 ?\n\n                    \n                    <div>\n                        <img className={s.detailImage} src={dog[0].image} alt=\"Dog\" width={'250px'} height={'250px'}/>\n                        <h1>Name: {dog[0].name}</h1>\n                        <h2>Height: {dog[0].height} cm</h2>\n                        <h2>Weight: {dog[0].weight} Kg</h2>\n                        <h2>Life Span: {dog[0].life_span}</h2>\n                        <h2>Temperamente: {Array.isArray(dog[0].temperaments) ? dog[0].temperaments.map(e => e.name + (' ')) : dog[0].temperament}</h2>\n                        \n                    </div>\n                    :\n                    <div className={s.preloader}></div>\n                }\n\n                <Link to={'/home'}><button className={s.buttonGoBack} onClick={() => handleClearDog()}>Go back to home</button></Link>\n            </div>\n        </div>\n    )\n}\n\n","import './App.css';\nimport {Route, Routes} from 'react-router-dom'\nimport LandingPage from './components/LandingPage/LandingPage.jsx';\nimport HomePage from './components/HomePage/HomePage.jsx';\nimport {CreateDog} from './components/CreateDog/CreateDog.jsx';\nimport {DetailsPage} from './components/DetailsPage/DetailsPage.jsx';\n\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n      {/* Se envuelve tod en el la etiqueta Routes en las nuevas versiones de react router */}\n      <Routes>\n        <Route path={'/'} exact element={<LandingPage/>}/>\n          \n       \n\n        <Route path={'/home'} element={<HomePage/>}/>\n\n        <Route path={'/createDog'} element={<CreateDog/>}/>\n\n        <Route path={'/home/:id'} element={<DetailsPage/>}/>\n\n\n          \n       \n      </Routes>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {GET_ALL_DOGS, \n        GET_ALL_TEMPERAMENTS,\n        FILTER_BY_WEIGHT,\n        FILTER_BY_ORIGIN,\n        FILTER_BY_NAME,\n        FILTER_BY_TEMPERAMENT,\n        GET_ONE_DOG,\n        CREATE_DOG_DB,\n        GET_DOG_DETAIL,\n        DOG_NOT_FOUND,\n        CLEAR_DETAILS\n    } from '../actions/actionsExports';\n\n\nconst initialState = {\n\n    dogs : [],\n    allDogs: [],\n    dogsTemperaments: [],\n    allDogsTemperaments: [],\n    dogDetail: [],\n    \n};\n\nconst rootReducer = (state= initialState, action) => {\n\n    switch(action.type){\n        // Guarda todos los dogs en el estado.\n        case GET_ALL_DOGS:\n            \n            return{\n                ...state,\n                dogs: action.payload,\n                allDogs: action.payload\n                \n            }\n        // Guarda el dog buscado por nombre.\n        case GET_ONE_DOG:\n            // console.log('HHHHH',action.payload)\n            return{\n                ...state,\n                dogs: action.payload \n\n            }\n\n        // Guarda los temperamtos en su estado. \n        case GET_ALL_TEMPERAMENTS:\n            \n            return{\n                ...state,\n                dogsTemperaments: action.payload,\n                allDogsTemperaments: action.payload\n            }\n        \n        // Guarda los pesos filtrados desde el back.\n        case FILTER_BY_WEIGHT:\n\n                       \n            return{\n                ...state,\n                dogs: action.payload\n            }\n\n        // Filtra los dogs por origen sea de la apo o la DB.\n        case FILTER_BY_ORIGIN:\n\n            const allDogs = state.allDogs;\n            const originFilter = action.payload === 'api' ? allDogs.filter(e => !e.createdInDb) : allDogs.filter(e => e.createdInDb)\n            return{\n                ...state,\n\n                dogs: action.payload === 'all' ? state.allDogs : originFilter\n            }\n        \n\n        // Filtra los dogs alfabeticamente ordenando asc o desc con el metod sort.\n        case FILTER_BY_NAME:\n\n            let filterName;\n\n            if(action.payload === 'asc'){\n\n                filterName = state.dogs.sort(function(a, b){\n                    if(a.name > b.name){\n                        return 1;\n\n                    }else if(b.name > a.name){\n                        return -1;\n                    }else{\n                        return 0;\n                    }\n                });\n\n            }else{\n                \n                filterName = state.dogs.sort(function(a, b){\n                    if(a.name > b.name){\n                        return -1;\n\n                    }else if(b.name > a.name){\n                        return 1;\n                    }else{\n                        return 0;\n                    }\n                });\n            }\n            return{\n                ...state,\n                dogs : action.payload === 'all' ? state.allDogs : filterName\n            }\n\n        // Filtra los dogs por el temperamtento seleccionado.\n        case FILTER_BY_TEMPERAMENT:\n            \n            const dogs = state.allDogs;\n            \n            \n            const fileterTemperament =  dogs.filter((e) => e.temperament && e.temperament.includes(action.payload));\n            \n           \n\n            return{\n                ...state,\n                dogs:  action.payload === 'select' ? state.allDogs : fileterTemperament\n            }\n\n        // Crea un dog en la DB.\n\n        case CREATE_DOG_DB:\n\n            return{\n                ...state,\n\n            }\n        \n        // Guarda el detalle del dog que se paso por Id.\n        case GET_DOG_DETAIL:\n\n            return{\n                ...state,\n                dogDetail: action.payload\n            }\n        \n        // Limpia el estado de los detalles para que no se vea el dog anterior cuando se renderice uno nuevo.\n        case CLEAR_DETAILS:\n\n            return{\n                ...state,\n                dogDetail: []\n            }\n\n        default:\n            return{\n                ...state\n            }\n    }\n\n};\n\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducer/index.reducer';\n\n\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux';\nimport {store} from './store/index';\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_API || \"http://localhost:3001\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n     \n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}